# Kickstart file automatically generated by anaconda.

install
text
url --url=http://<%= @install_server %>/centos/<%= @centos6_version %>/os/x86_64
lang en_US.UTF-8
keyboard us
timezone --utc America/New_York
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"

network --onboot yes --device eth0 --bootproto dhcp
network --onboot yes --device eth1 --bootproto dhcp --noipv6

rootpw  --iscrypted $6$hwntCZXQgRfMJejm$kUF6HdDjubqqR0myKLm4xu..MlGXDDPD0V.RQbbmQ//4aIlUGixc/a5XFd9fdID8fwzdX.1.D3JYJH5Vd4Vp40
authconfig --enableshadow --passalgo=sha512

firewall --disabled
selinux --disabled
firstboot --disabled

# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
clearpart --all --drives=sda

part /boot --fstype=ext4 --size=500
part pv.008002 --grow --size=1

volgroup vg0 --pesize=4096 pv.008002
logvol / --fstype=ext4 --name=lv_root --vgname=vg0 --size=2048
logvol /usr --fstype=ext4 --name=lv_usr --vgname=vg0 --size=5120
logvol /tmp --fstype=ext4 --name=lv_tmp --vgname=vg0 --size=1024
logvol /var --fstype=ext4 --name=lv_var --vgname=vg0 --grow --size=4096
logvol swap --name=lv_swap --vgname=vg0 --recommended

repo --name="base" --baseurl=http://<%= @install_server %>/centos/<%= @centos6_version %>/os/x86_64 --cost=10
repo --name="extras" --baseurl=http://<%= @install_server %>/centos/<%= @centos6_version %>/extras/x86_64 --cost=20
repo --name="updates" --baseurl=http://<%= @install_server %>/centos/<%= @centos6_version %>/updates/x86_64 --cost=1

%packages --nobase --ignoremissing
@Core --nodefaults
-*firmware
-b43-openfwwf
nfs-utils
%end

%post
for t in $(cat /proc/cmdline); do
    case $t in
        HOSTNAME*)
            eval $t
            break
        ;;
    esac
done

if [ ! -z "$HOSTNAME" ]; then
    curl "http://<%= @install_server %>/exec/move.cgi?$HOSTNAME"
fi

# install authorized SSH keys for root user
curl http://<%= @install_server %>/ks/assets/root.authorized_keys -Dheaders -odata -s
if grep -q '200 OK' headers; then
    install -D -m600 data /root/.ssh/authorized_keys
fi

# install Puppet repository GPG key
# https://puppet.com/docs/puppet/5.5/puppet_platform.html
# https://yum.puppetlabs.com/RPM-GPG-KEY-puppet
curl http://<%= @install_server %>/ks/assets/RPM-GPG-KEY-puppet5-release -Dheaders -odata -s
if grep -q '200 OK' headers; then
    install -D -m644 data /etc/pki/rpm-gpg/RPM-GPG-KEY-puppet5-release
    rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-puppet5-release
fi

# install Puppet repository
curl http://<%= @install_server %>/ks/assets/puppet5.repo -Dheaders -odata -s
if grep -q '200 OK' headers; then
    install -D -m644 data /etc/yum.repos.d/puppet5.repo
fi

# install Puppet Agent
yum -y install puppet-agent-5.5.14

# install Puppet agent config
curl http://<%= @install_server %>/ks/assets/puppet.conf -Dheaders -odata -s
if grep -q '200 OK' headers; then
    install -D -m644 data /etc/puppetlabs/puppet/puppet.conf
fi

# bootstrap into Puppet
/opt/puppetlabs/bin/puppet agent --test
%end

# Reboot after installation
reboot